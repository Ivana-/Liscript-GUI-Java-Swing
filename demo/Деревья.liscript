; Деревья ;
(defmacro grad (x) (round (* 180 (/ x pi))))

(defn tree (graph n x y d d0 l v i)
    (def x1 (round (+ x (* l (cos d)))) y1 (round (+ y (* l (sin d)))))
    (def p (java (class "java.awt.Polygon") "new"))
    (java p "addPoint" x y)
    (java p "addPoint" x1 y1)
    (def kl (/ l (- 7 i) 2.0))
    (def x0 (round (- x (* kl (cos d0)))) y0 (round (- y (* kl (sin d0)))))
    (java p "addPoint" x0 y0)
    (java graph "setColor" (cond (> n 0) BROWN GREEN))
    (java graph "fillPolygon" p)
    (java graph "drawPolygon" p)
    (cond (> n 0)
             ((defmacro delta () (* v (rand (/ pi 30) (/ pi (- 7 i) 3.0))))
              (tree graph (- n 1) x1 y1 (- d (delta)) d (/ l 1.2) (- 0 v) i)
              (tree graph (- n 2) x1 y1 (+ d (delta)) d (/ l 1.2) (- 0 v) i))
             (cond (< (rnd) (- (/ i 10.0) 0.2))
                    ((java graph "setColor" RED)
                     (java graph "fillOval" (- x 5) (- y 5) 10 10))) ))

(def w-s 320 w-s-half (/ w-s 2))
(defmacro chart (i)
    (def image (java (class "java.awt.image.BufferedImage") "new" w-s w-s 1))
    (def imageGraphics (java image "createGraphics"))
    (java imageGraphics "setBackground" WHITE)
    (java imageGraphics "clearRect" 0 0 w-s w-s)
    (tree imageGraphics (+ 7 (/ i 3)) w-s-half (- w-s 20) (- 0 (/ pi 2)) 0 50 1 i)
    (add-image window image)
    (+ 1 i))

(def window (java (class "javax.swing.JFrame") "new"))
(java window "setLayout" (java (class "java.awt.FlowLayout") "new"))
(ntimes 6 chart 0)

(java window "setVisible" true)
;(java window "pack");
(java window "setBounds" 10 10 (+ 50 (* 3 w-s)) (+ 60 (* 2 w-s)))
"Деревья"
