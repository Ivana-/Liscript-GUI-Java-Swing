; Гроздья рябины ;
(defmacro grad (x) (round (* 180 (/ x pi))))

(defn tree (graph n x y d d0 l v i)
    (def x1 (round (+ x (* l (cos d)))) y1 (round (+ y (* l (sin d)))))
    (def p (java (class "java.awt.Polygon") "new"))
    (java p "addPoint" x y)
    (java p "addPoint" x1 y1)
    (def kl (/ l 5))
    (def x0 (round (- x (* kl (cos d0)))) y0 (round (- y (* kl (sin d0)))))
    (java p "addPoint" x0 y0)
    (java graph "setColor" BROWN)
    (java graph "fillPolygon" p)
    (java graph "drawPolygon" p)
    (cond (> n 0)
             ((defmacro delta () (* v (rand (/ pi 20) (/ pi 4.5))))
              (tree graph (- n 1) x1 y1 (- d (delta)) d (/ l 1.2) (- 0 v) i)
              (tree graph (- n 2) x1 y1 (+ d (delta)) d (/ l 1.2) (- 0 v) i))
             ((java graph "setColor" RED)
              (java graph "fillOval" (- x1 10) (- y1 10) 20 20)
              (cond (< (rnd) 0.7)
                    ((java graph "setColor" BLACK)
                     (java graph "fillOval" (- x1 2) (- y1 6) 4 4))) )))

(def w-s 320 w-s-half (/ w-s 2))
(defmacro chart (i)
    (def image (new-image w-s w-s))
    (def ig (new-imageGraphics image))
    (java ig "setBackground" WHITE)
    (java ig "clearRect" 0 0 w-s w-s)
    (tree ig 9 w-s-half (- w-s 20) (- 0 (/ pi 2)) 0 50 1 i)
    (add-image window image)
    (+ 1 i))

(def window (new-window "FlowLayout"))
(ntimes 6 chart 0)

(java window "setVisible" true)
;(java window "pack");
(java window "setBounds" 10 10 (+ 50 (* 3 w-s)) (+ 60 (* 2 w-s)))
"Гроздья рябины"
