(defn test ()

(def WHeight 300 WWidth 300)
(def img (new-image WWidth WHeight))
(def img-gr (new-imageGraphics img))
(def w (new-window "FlowLayout"))
(add-image w img)
(java w "setVisible" true)
(java w "pack")
(java img-gr "fillOval" 140 140 20 20)

(defn pause () cond (eq? P 1) (pause) 0)

(defn drawOval-color (a b color)
    (pause)
    ;(java img-gr "clearRect" 0 0 WWidth WHeight);
    (java img-gr "setColor" color)
    (java img-gr "drawOval" (- (/ WWidth 2) (/ a 2)) (- (/ WHeight 2) (/ b 2)) a b)
    ;(java w "revalidate");
    (java w "repaint")
    (cond (eq? color WHITE) (java (class "java.lang.Thread") "sleep" 10)))

(def BLACK (java (class "java.awt.Color") "new" 0 0 0))
(def WHITE (java (class "java.awt.Color") "new" 255 255 255))

(defn drawOval (a b) drawOval-color a b WHITE)
(defn clearOval (a b) drawOval-color a b BLACK)

(defn Anim ()
    (def d 5 max WWidth min 80)
    (defn DownA (a b)
         (clearOval a b)
         (cond (= a min) (UpB a b) ((drawOval (- a d) b) (DownA (- a d) b))) )
    (defn UpB (a b)
         (clearOval a b)
         (cond (= b max) (DownB a b) ((drawOval a (+ b d)) (UpB a (+ b d)))) )
    (defn DownB (a b)
         (clearOval a b)
         (cond (= b min) (UpA a b) ((drawOval a (- b d)) (DownB a (- b d)))) )
    (defn UpA (a b)
         (clearOval a b)
         (cond (= a max) (DownA a b) ((drawOval (+ a d) b) (UpA (+ a d) b))) )
    (DownA max min) )
(Anim))

(test)
